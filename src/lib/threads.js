const {	spawn,	Pool,	Thread,	Worker,} = require('threads');const { cpus } = require('node:os');async function pool(name, fun, options) {	const pool = Pool(() => spawn(new Worker(`./workers/${name}.js`)), options);	try {		return await fun(pool);	} finally {		pool.settled().then(() => pool.terminate());	}};async function quick(name, fun) {	const thread = await spawn(new Worker(`./workers/${name}.js`));	try {		return await fun(thread);	} finally {		Thread.terminate(thread);	}};function relativePool(fraction, name, fun, options) {	const size = Math.ceil(fraction * cpus().length);	return pool(name, fun, {		...options,		size,	});}async function reusable(name) {	const thread = await spawn(new Worker(`./workers/${name}.js`));	thread.terminate = () => Thread.terminate(thread);	return thread;};module.exports = {	pool,	quick,	relativePool,	reusable,};